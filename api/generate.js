// api/generate.js - ุงูุณุฎ ูุฐุง ุงูููุฏ ุจุงููุงูู
import fetch from 'node-fetch';

export default async function handler(req, res) {
  // ุงูุณูุงุญ ุจู CORS
  res.setHeader('Access-Control-Allow-Credentials', true);
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');

  // ูุนุงูุฌุฉ ุทูุจุงุช OPTIONS ูู CORS
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  // ุงูุชุฃูุฏ ูู ุฃู ุงูุทุฑููุฉ POST
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'ุงูุทุฑููุฉ ุบูุฑ ูุณููุญุฉ. ุงุณุชุฎุฏู POST ููุท.' });
  }

  try {
    const { productName, productFeatures, productPrice, productCategory, targetAudience, designDescription } = req.body;

    // ูุญุต ุงููุฏุฎูุงุช ุงูุฃุณุงุณูุฉ
    if (!productName || !productFeatures) {
      return res.status(400).json({ 
        error: "ุงูุจูุงูุงุช ูุงูุตุฉ. ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงุณู ุงูููุชุฌ ูุงูููุฒุงุช." 
      });
    }

    console.log('๐ ุฌุงุฑู ุฅูุดุงุก ุตูุญุฉ ููููุชุฌ:', productName);

    const prompt = `
ุฃูุช ูุตูู ููุจ ูุญุชุฑู ููุทูุฑ ูุงุฌูุงุช ุฃูุงููุฉ. ูู ุจุฅูุดุงุก ุตูุญุฉ ูุจูุท HTML ูุงููุฉ ูุฌุฐุงุจุฉ ูููุชุฌ ุจุงุณุชุฎุฏุงู ุงููุนูููุงุช ุงูุชุงููุฉ:

**ูุนูููุงุช ุงูููุชุฌ:**
- ุงูุงุณู: ${productName}
- ุงูุณุนุฑ: ${productPrice || '4990 ุฏุฌ'}
- ุงููุฆุฉ: ${productCategory || 'beauty'}
- ุงูุฌูููุฑ ุงููุณุชูุฏู: ${targetAudience || 'women'}
- ุงููููุฒุงุช: ${productFeatures}

**ูุชุทูุจุงุช ุงูุชุตููู:**
${designDescription || 'ุชุตููู ุนุตุฑู ูุฌุฐุงุจ ูุชูุงุณุจ ูุน ุงูููุชุฌ'}

**ุงููุชุทูุจุงุช ุงููููุฉ:**
- HTML ู CSS ุญุฏูุซ
- ุชุตููู ูุชุฌุงูุจ ููุฌูุงู
- ุฃููุงู ูุชูุงุณูุฉ ูุฌุฐุงุจุฉ
- ุฃุฒุฑุงุฑ ูุงุถุญุฉ ูุฏุนูุงุช ููุนูู
- ูุณู ูููููุฒุงุช ูุงูุนุฑูุถ
- ููุงุณุจ ููุณูู ุงูุนุฑุจู

ุฃูุดุฆ ููุฏ HTML ูุงูู ูุฌุงูุฒ ููุงุณุชุฎุฏุงู ุจุฏูู ุฃู ุดุฑุญ ุฅุถุงูู.
`;

    // ุงุณุชุฏุนุงุก DeepSeek API
    const response = await fetch('https://api.deepseek.com/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${process.env.DEEPSEEK_API_KEY}`
      },
      body: JSON.stringify({
        model: 'deepseek-chat',
        messages: [
          { 
            role: 'system', 
            content: 'ุฃูุช ูุณุงุนุฏ AI ูุชุฎุตุต ูู ุชุตููู ุตูุญุงุช ุงูููุจ. ูู ุจุฅุฎุฑุงุฌ ููุฏ HTML ููุท ุจุฏูู ุฃู ุดุฑุญ ุฅุถุงูู.' 
          },
          { 
            role: 'user', 
            content: prompt 
          }
        ],
        max_tokens: 4000,
        temperature: 0.7
      })
    });

    if (!response.ok) {
      const errorText = await response.text();
      throw new Error(`ุฎุทุฃ ูู DeepSeek API: ${response.status} - ${errorText}`);
    }

    const data = await response.json();
    
    if (!data.choices || !data.choices[0] || !data.choices[0].message) {
      throw new Error('ุงุณุชุฌุงุจุฉ ุบูุฑ ุตุงูุญุฉ ูู DeepSeek API');
    }

    let html = data.choices[0].message.content.trim();
    
    // ุชูุธูู ุงูู HTML ูู markdown
    html = html.replace(/```html|```/g, '').trim();
    
    console.log('โ ุชู ุฅูุดุงุก ุงูุตูุญุฉ ุจูุฌุงุญ');
    
    res.json({ 
      html: html,
      success: true,
      message: 'ุชู ุฅูุดุงุก ุงูุตูุญุฉ ุจูุฌุงุญ'
    });
    
  } catch (err) {
    console.error("โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุตูุญุฉ:", err.message);
    res.status(500).json({ 
      error: `ูุดู ูู ุฅูุดุงุก ุงูุตูุญุฉ.`,
      detail: err.message
    });
  }
}
